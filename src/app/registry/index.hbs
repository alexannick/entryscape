<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="dc.identifier" content="{{htmlWebpackPlugin.options.identifier}}"/>
    <meta name="dc.source" content="{{htmlWebpackPlugin.options.source}}"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,500,700"/>
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto+Slab:400,100,300,700"/>
    <title>Registry</title>
    <script src="/theme/local.js"></script>
    <script defer>
        var paramsToMap = function (params, arr, seperator) {
            seperator = seperator || '&';
            var vars = params.split(seperator);

            for (let i = 0; i < vars.length; i++) {
                var pair = vars[i].split('=');
                arr[pair[0]] = pair[1] || true;
            }
        };

        /**
         * get query params
         *
         * {String} queryParams
         * {Map} queryParamsMap
         */
        window.hashParams = window.location.hash;
        window.hashParamsMap = {};
        window.queryParams = window.location.search;
        window.queryParamsMap = {};

        paramsToMap(hashParams.substring(1), hashParamsMap);
        paramsToMap(queryParams.substring(1), queryParamsMap);

        /** HACK redirect any hash params that look like
         * #view=datasets&resource=http://www.entryscape.com/someEntryURI
         * to /catalog/:context/datasets/:dataset
         */

        if (hashParamsMap.view === 'dataset' && hashParamsMap.resource) {
            var resourceURI = hashParamsMap.resource;
            var entryPart = resourceURI.split('/store/');
            var earr = entryPart[1].split('/'); // TODO huge guess
            var context = earr[0];
            var dataset = earr[2];
            var redirectURL = window.location.origin + '/catalog/' + context + '/datasets/' + dataset + queryParams;
            window.location.replace(redirectURL);
        } else {
            var js = function (src, dataMain) {
                dataMain = dataMain || '';
                document.write('\x3Cscript data-main="' + dataMain + '" src="' + src + '">\x3C/script>');
            };

            /**
             * if there's a localconfig query param load a script src
             *
             * path values and respective script src:
             *  - true                    -> src = '/theme/local.js.local'
             *  - starts with '.' or '/'  -> src = path
             *  - starts with other char  -> src = /theme/path
             */
            if (queryParamsMap.localconfig) {
                var localPath = queryParamsMap.localconfig;
                var src = localPath === 'true' ?
                        '/theme/local.js.local' : (localPath.startsWith('.') || localPath.startsWith('/') ?
                                localPath : '/theme' + localPath);
                js(src);
            }

            /**
             * if __entryscape_config_dev is defined already then override values in __entryscape_config
             */
            if (window.__entryscape_config_dev) {
                Object.assign(__entryscape_config, __entryscape_config_dev); // TODO @valentino not supported in IE11
            }

            var useLocalBuild = __entryscape_config.entryscape.localBuild;
            var app = __entryscape_config.entryscape.static.app;
            var path = useLocalBuild ? '/dist' : __entryscape_config.entryscape.static.url;
            var version = useLocalBuild ? '' : (__entryscape_config.entryscape.static.version || 'latest');

            /**
             * load the right css/js for the given config/queryParams
             */
            var debug = queryParamsMap.debug;
            var appPath = path + (useLocalBuild ? '' : app) + (version ? '/' : '') + version + (debug ? '/app.debug.js' : '/app.js');
            js(appPath);

            const favIconPath = path + (useLocalBuild ? '' : app) + (version ? '/' : '') + version + '/assets/favicon.ico';
            document.write('<link rel="icon" href="' + favIconPath + '" type="image/x-icon"/>');
        }
    </script>
</head>
<body class="nav-md">
<div id="controlNode"></div>
</body>
</html>
